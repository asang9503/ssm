<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qfedu.mapper.ClassesMapper">
	<resultMap id="BaseResultMap" type="com.qfedu.pojo.Classes">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="tid" property="tid" jdbcType="INTEGER" />
		<result column="size" property="size" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, name, tid, size
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from class
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from class
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.qfedu.pojo.Classes">
		<selectKey resultType="java.lang.Integer" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into class (name, tid, size
		)
		values (#{name,jdbcType=VARCHAR},
		#{tid,jdbcType=INTEGER},
		#{size,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.qfedu.pojo.Classes">
		<selectKey resultType="java.lang.Integer" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into class
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="name != null">
				name,
			</if>
			<if test="tid != null">
				tid,
			</if>
			<if test="size != null">
				size,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="tid != null">
				#{tid,jdbcType=INTEGER},
			</if>
			<if test="size != null">
				#{size,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.qfedu.pojo.Classes">
		update class
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="tid != null">
				tid = #{tid,jdbcType=INTEGER},
			</if>
			<if test="size != null">
				size = #{size,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.qfedu.pojo.Classes">
		update class
		set
		name = #{name,jdbcType=VARCHAR},
		tid = #{tid,jdbcType=INTEGER},
		size =
		#{size,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- 查询出的数据包含课程信息和课程讲师信息，这个可以关联user表和class表。 已选人数的处理思路1count()2每次学生选课可以做两个数据库操作一是在中间表插入一条记录，值分别是用户id和课程id。二同时在去修改保存在class表示中专门保存已选人数的字段。 -->

	<!-- 表关联查询，结果集可以使用两种1List<map<String,object>>2List<POJO> ，要求pojo增加字段与查询结果集字段一一对应 -->
	<select id="select" resultType="classes">
		select cls.id as
		id,cls.name as
		name,u.username as username ,cls.size as size
		,count(sc.stuid) as
		`count`
		from class cls left outer
		join user as u on
		cls.tid =u.id
		left
		outer join stu_cls as sc on
		sc.clsid =cls.id group by
		cls.id

	</select>

</mapper>